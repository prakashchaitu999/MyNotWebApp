// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MyNoteWebAPI.Migrations
{
    [DbContext(typeof(NoteDbContext))]
    [Migration("20190804052304_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.MyLabel", b =>
                {
                    b.Property<int>("LabelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LabelDate");

                    b.Property<string>("LabelDescription");

                    b.Property<string>("LabelName");

                    b.Property<int?>("MyNoteNoteId");

                    b.HasKey("LabelId");

                    b.HasIndex("MyNoteNoteId");

                    b.ToTable("MyLabels");
                });

            modelBuilder.Entity("Entity.MyNote", b =>
                {
                    b.Property<int>("NoteId");

                    b.Property<string>("City");

                    b.Property<string>("Contact")
                        .IsRequired();

                    b.Property<string>("NoteName")
                        .IsRequired();

                    b.HasKey("NoteId");

                    b.HasAlternateKey("Contact");

                    b.ToTable("MyNotes");
                });

            modelBuilder.Entity("Entity.MyLabel", b =>
                {
                    b.HasOne("Entity.MyNote")
                        .WithMany("Labels")
                        .HasForeignKey("MyNoteNoteId");
                });
#pragma warning restore 612, 618
        }
    }
}
